{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "revealTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "beneficiaryAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AuctionEndAlreadyCalled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooEarly",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooLate",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					}
				],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "biddingEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					},
					{
						"internalType": "bool[]",
						"name": "fakes",
						"type": "bool[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "secrets",
						"type": "bytes32[]"
					}
				],
				"name": "reveal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"AuctionEndAlreadyCalled()": [
					{
						"notice": "関数 auctionEnd はすでに呼び出されています。"
					}
				],
				"TooEarly(uint256)": [
					{
						"notice": "この関数は早く呼び出されすぎました。 `time` 秒後にもう一度試してください。"
					}
				],
				"TooLate(uint256)": [
					{
						"notice": "この関数を呼び出すのが遅すぎました。 `time` 秒後に呼び出すことはできません。"
					}
				]
			},
			"kind": "user",
			"methods": {
				"auctionEnd()": {
					"notice": "オークションを終了し、最高入札額を受益者に送ります。"
				},
				"bid(bytes32)": {
					"notice": "`blindedBid` = keccak256(abi.encodePacked(value, fake, secret)) でブラインド入札を行います。 送信されたEtherは、リビールフェーズで入札が正しくリビールされた場合にのみ払い戻されます。 入札と一緒に送られたEtherが少なくとも「value」であり、「fake」がtrueでない場合、入札は有効です。 「fake」をtrueに設定し、正確な金額を送らないことで、本当の入札を隠しつつ、必要なデポジットを行うことができます。 同じアドレスで複数の入札を行うことができます。"
				},
				"reveal(uint256[],bool[],bytes32[])": {
					"notice": "ブラインドした入札を公開します。 正しくブラインドされた無効な入札と、完全に高い入札を除くすべての入札の払い戻しを受けることができます。"
				},
				"withdraw()": {
					"notice": "オーバーな入札を引き出す。"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"0113/mvc/solidity/exam.sol": "BlindAuction"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"0113/mvc/solidity/exam.sol": {
			"keccak256": "0xf9d12a7f3c17ee3a773e7e7992c821153a7afba8d812973ba139af580fd1cd95",
			"urls": [
				"bzz-raw://58ad664328b2da2d757a9f97261fea8f95f0a6442fcc7aa1f0a81eb1d0034c07",
				"dweb:/ipfs/QmWsT4AfXauDjFFbBhV2mzcE1TxuB5KdZgwEJ2FMiGW5mi"
			]
		}
	},
	"version": 1
}